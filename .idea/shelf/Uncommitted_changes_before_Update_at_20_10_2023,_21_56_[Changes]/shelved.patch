Index: app/src/main/java/com/example/vottakvot/screen/WelcomeScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.vottakvot.screen\n\nimport android.app.Application\nimport android.content.Context\nimport androidx.compose.animation.AnimatedVisibility\nimport androidx.compose.animation.ExperimentalAnimationApi\nimport androidx.compose.foundation.BorderStroke\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxHeight\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.layout.width\nimport androidx.compose.material.Button\nimport androidx.compose.material.ButtonDefaults\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.OutlinedButton\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Alignment.Companion.BottomCenter\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.drawWithCache\nimport androidx.compose.ui.graphics.BlendMode\nimport androidx.compose.ui.graphics.Brush\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.painter.Painter\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.font.FontFamily\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.navigation.NavHostController\nimport androidx.navigation.compose.rememberNavController\nimport com.example.vottakvot.R\nimport com.example.vottakvot.ViewModel.WelcomeViewModel\nimport com.example.vottakvot.data.DataStoreRepository\nimport com.example.vottakvot.navigation.Screen\nimport com.example.vottakvot.navigation.WelcomePage\nimport com.google.accompanist.pager.ExperimentalPagerApi\nimport com.google.accompanist.pager.HorizontalPager\nimport com.google.accompanist.pager.HorizontalPagerIndicator\nimport com.google.accompanist.pager.PagerState\nimport com.google.accompanist.pager.rememberPagerState\n\n\nfun DataGeneration(welcomeViewModel: WelcomeViewModel)\n{\n    welcomeViewModel.createExamplePageList()\n}\n//  экраны приветствия\n@ExperimentalAnimationApi\n@ExperimentalPagerApi\n@Composable\nfun WelcomeScreen(\n    // context: Context,\n    navController: NavHostController,\n    welcomeViewModel: WelcomeViewModel\n) {\n    // заполнение моками\n    DataGeneration(welcomeViewModel)\n    //  все страницы приветствия\n    val pages = welcomeViewModel.getWelcomePagesList()\n    if (pages.size == 0) {\n        navController.navigate(Screen.Home.route)\n        return\n    }\n    val pagerCount = pages.size\n    val pagerState = rememberPagerState()\n\n    Column(\n        modifier = Modifier\n            .fillMaxWidth()\n            .background(androidx.compose.material3.MaterialTheme.colorScheme.surface)\n    ) {\n        HorizontalPager(\n            modifier = Modifier.fillMaxWidth(),\n                //.weight(10f),\n            count = pagerCount,\n            state = pagerState,\n            verticalAlignment = Alignment.Top,\n        ) { position ->\n            PagerScreen(\n                onBoardingPage = pages[position]\n            )\n        }\n\n        Spacer(\n            modifier = Modifier\n                .height(100.dp)\n        )\n        BottomNavigation(\n            modifier = Modifier.\n            fillMaxWidth(),\n            navController = navController,\n            pagerState = pagerState,\n            pagerCount = pagerCount\n        )\n\n    }\n}\n\n@Composable\nfun PagerScreen(onBoardingPage: WelcomePage) {\n    Column(\n        modifier = Modifier\n            .fillMaxWidth()\n        ,\n        horizontalAlignment = Alignment.CenterHorizontally,\n        verticalArrangement = Arrangement.Top\n    ) {\n        ImageAndText(\n            modifier = Modifier\n                .fillMaxWidth(),\n               // .fillMaxHeight(1f),\n            painter = painterResource(id = onBoardingPage.image),\n            ico = painterResource(id = R.drawable.logo),\n            contentDescription = \"Pager Image\",\n            title = \"ВотТакВот\"\n        )\n        Spacer(modifier = Modifier\n            .height(20.dp)\n        )\n        Text(\n            modifier = Modifier\n                .fillMaxWidth()\n                .padding(\n                    top = 20.dp\n                ),\n            color = androidx.compose.material3.MaterialTheme.colorScheme.onBackground,\n            text = onBoardingPage.title,\n            fontSize = 25.sp,\n            fontWeight = FontWeight.Bold,\n            textAlign = TextAlign.Center,\n\n        )\n        Spacer(modifier = Modifier\n            .height(20.dp)\n        )\n        Text(\n            modifier = Modifier\n                .fillMaxWidth(1f)\n                .padding(\n                    top = 20.dp,\n                    start = 40.dp,\n                    end = 40.dp\n                ),\n            text = onBoardingPage.description,\n            color = androidx.compose.material3.MaterialTheme.colorScheme.onBackground,\n            fontSize = 16.sp,\n            fontWeight = FontWeight.Medium,\n            textAlign = TextAlign.Justify,\n            lineHeight = 25.sp\n        )\n    }\n}\n\n@Composable\nfun ImageAndText(\n    modifier: Modifier = Modifier,\n    painter: Painter,\n    ico : Painter,\n    contentDescription: String,\n    title: String\n) {\n    Box(\n        modifier = modifier\n            .fillMaxWidth()\n            ,\n    contentAlignment = Alignment.TopCenter,\n    ) {\n        Box (\n            modifier = modifier\n                .fillMaxWidth()\n        )\n        Image(painter =  painter,\n            contentDescription = \"\",\n            modifier = Modifier\n                .fillMaxWidth()\n                .fillMaxHeight(0.55f)\n                .drawWithCache {\n                    val gradient = Brush.verticalGradient(\n                        colors = listOf(\n                            Color.Transparent,\n                            Color.Black\n                        ),\n                        startY = size.height / 3,\n                        endY = size.height\n                    )\n                    onDrawWithContent {\n                        drawContent()\n                        drawRect(gradient, blendMode = BlendMode.Darken)\n                    }\n                }\n        )\n        /*\n        Image(\n            painter = painter,\n            contentDescription = contentDescription,\n            modifier = Modifier\n                .fillMaxWidth()\n                .fillMaxHeight(0.55f),\n            alignment = Alignment.TopCenter\n        )\n        */\n        Row (\n            modifier = Modifier\n                .padding(top = 10.dp),\n            horizontalArrangement = Arrangement.Center,\n            verticalAlignment = Alignment.Top\n\n        )\n        {\n            Image(\n                painter = ico,\n                contentDescription = contentDescription,\n                modifier = Modifier\n                    .padding(top = 5.dp)\n            )\n            Text(\n                text = title,\n                fontSize = 36.sp,\n                fontFamily = FontFamily.Cursive,\n                color = Color.Black,\n                modifier = Modifier\n                    .padding(top = 0.dp)\n\n            )\n        }\n    }\n}\n\n@OptIn(ExperimentalAnimationApi::class, ExperimentalPagerApi::class)\n@Composable\nfun BottomNavigation(\n    modifier: Modifier = Modifier,\n    navController: NavHostController,\n    pagerState: PagerState,\n    pagerCount: Int\n) {\n    Box(\n        modifier = modifier\n            .fillMaxWidth(),\n            //.fillMaxHeight(),\n        contentAlignment = BottomCenter\n\n    )\n    {\n    Row(\n        modifier = Modifier\n            .fillMaxWidth(1f)\n            .padding(bottom = 16.dp),\n        horizontalArrangement = Arrangement.SpaceBetween,\n        verticalAlignment = Alignment.Bottom\n    )\n    {\n        SkipButton(\n            modifier = Modifier\n                // .fillMaxWidth(1f),\n                .size(\n                    width = 160.dp,\n                    height = 80.dp\n                ),\n            pagerState = pagerState\n        ) {\n            //welcomeViewModel.saveOnBoardingState(completed = true)\n            navController.popBackStack()\n            navController.navigate(Screen.Home.route)\n        }\n        Column(\n            horizontalAlignment = Alignment.CenterHorizontally,\n            verticalArrangement = Arrangement.Center\n            // modifier = Modifier\n            //.fillMaxWidth(1f)\n            // .padding(bottom = 16.dp),\n            //  horizontalArrangement = Arrangement.Center,\n            //verticalAlignment = Alignment.CenterVertically\n        ) {\n            HorizontalPagerIndicator(\n                modifier = Modifier\n                    //.fillMaxWidth(1f)\n                    .padding(bottom = 24.dp),\n                activeColor = androidx.compose.material3.MaterialTheme.colorScheme.primary,\n                inactiveColor = Color(R.color.inactive),\n                pagerState = pagerState\n            )\n        }\n        ContinueButton(\n            modifier = Modifier\n                // .fillMaxWidth(1f),\n                .size(\n                    width = 160.dp,\n                    height = 80.dp\n                ),\n            pagerState = pagerState,\n            text = \"Да, конечно!\",\n            pagerCount = pagerCount\n        ) {\n            //welcomeViewModel.saveOnBoardingState(completed = true)\n            navController.popBackStack()\n            navController.navigate(Screen.Home.route)\n        }\n    }\n    }\n\n\n\n\n}\n\n@ExperimentalAnimationApi\n@ExperimentalPagerApi\n@Composable\nfun SkipButton(\n    modifier: Modifier,\n    pagerState: PagerState,\n    text: String = \"Не сейчас\",\n    onClick: () -> Unit\n) {\n    Row(\n        verticalAlignment = Alignment.Bottom,\n        horizontalArrangement = Arrangement.Start\n    ) {\n        AnimatedVisibility(\n            //modifier = Modifier.fillMaxHeight(),\n            visible = pagerState.currentPage >= 0\n        ) {\n            OutlinedButton(\n                modifier = modifier,\n                // colors = ButtonDefaults.outlinedButtonColors(backgroundColor = Color.Transparent),\n                border = BorderStroke(0.dp, Color.Transparent),\n                // modifier = modifier,\n                onClick = onClick,\n                colors = ButtonDefaults.buttonColors(\n                    contentColor = androidx.compose.material3.MaterialTheme.colorScheme.onSecondaryContainer,\n                    backgroundColor = Color.Transparent\n                    //androidx.compose.material3.MaterialTheme.colorScheme.background\n                )\n            ) {\n                //Icon(Icons.Default.Add,\"\")\n                Text(text)\n                /*\n                Button(\n                    onClick = onClick,\n                    colors = ButtonDefaults.buttonColors(\n                        contentColor = androidx.compose.material3.MaterialTheme.colorScheme.onSecondaryContainer,\n                        backgroundColor = Color.White\n                        //androidx.compose.material3.MaterialTheme.colorScheme.background\n                    )\n                ) {\n                    Text(text)\n                }\n\n                 */\n            }\n\n\n        }\n    }\n}\n\n@ExperimentalAnimationApi\n@ExperimentalPagerApi\n@Composable\nfun ContinueButton(\n    modifier: Modifier,\n    pagerState: PagerState,\n    pagerCount: Int,\n    text: String = \"Да, конечно!\",\n    onClick: () -> Unit\n) {\n    Row(\n        verticalAlignment = Alignment.Bottom,\n        horizontalArrangement = Arrangement.Start\n    ) {\n        AnimatedVisibility(\n            //modifier = Modifier.fillMaxHeight(),\n            visible = pagerState.currentPage >= 0\n        ) {\n            OutlinedButton(\n                modifier = modifier,\n                colors = ButtonDefaults.outlinedButtonColors(backgroundColor = Color.Transparent),\n                border = BorderStroke(0.dp, Color.Transparent),\n                // modifier = modifier,\n                onClick = onClick\n            ) {\n                //Icon(Icons.Default.Add,\"\")\n                var _text = text\n                if (pagerState.currentPage != pagerCount - 1)\n                    _text = \"Продолжить...\"\n                Text(_text)\n            }\n\n            /*\n             Button(\n\n                 onClick = onClick,\n                 colors = ButtonDefaults.buttonColors(\n\n                     contentColor = androidx.compose.material3.MaterialTheme.colorScheme.onSecondaryContainer,\n                     backgroundColor = androidx.compose.material3.MaterialTheme.colorScheme.background\n                 )\n             ) {\n\n             }\n\n             */\n        }\n    }\n}\n@Composable\nfun SplashScreen2() {\n    Column (\n        modifier = Modifier.fillMaxSize(),\n        horizontalAlignment = Alignment.CenterHorizontally,\n        verticalArrangement = Arrangement.Center\n    )\n    {\n        Row(\n            horizontalArrangement = Arrangement.Center,\n            verticalAlignment = Alignment.CenterVertically\n        )\n        {\n            Image(\n                painter = painterResource(id = R.drawable.logo),\n                contentDescription = \"Splash Screen\",\n                modifier = Modifier.size(48.dp)\n            )\n            Spacer(modifier = Modifier.width(10.dp))\n            androidx.compose.material3.Text(\n                text = \"ВотТакВот\",\n                fontWeight = FontWeight.Bold,\n                fontSize = 25.sp,\n                color = androidx.compose.material3.MaterialTheme.colorScheme.onBackground\n            )\n        }\n        Spacer(modifier = Modifier.height(20.dp))\n        androidx.compose.material3.Text(\n            text = \"Загружаем...\",\n            fontSize = 16.sp,\n            color = androidx.compose.material3.MaterialTheme.colorScheme.onBackground\n        )\n    }\n}\n\n@OptIn(ExperimentalAnimationApi::class, ExperimentalPagerApi::class)\n@Preview(showBackground = true,\n    backgroundColor = 0xFFFFFFFF\n)\n@Composable\nfun SplashScreenPrev2() {\n    // для экранов приветствия\n        //getApplication<Application>().applicationContext\n    var welcomeViewModel = WelcomeViewModel()\n    WelcomeScreen(\n        navController = rememberNavController(),\n        welcomeViewModel = welcomeViewModel\n    )\n}\n\nfun provideContext(application: Application): Context? {\n    return application.applicationContext\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/vottakvot/screen/WelcomeScreen.kt b/app/src/main/java/com/example/vottakvot/screen/WelcomeScreen.kt
--- a/app/src/main/java/com/example/vottakvot/screen/WelcomeScreen.kt	(revision 529a97acc6f4e3a84ea77dcfbd02948cc56d1c0e)
+++ b/app/src/main/java/com/example/vottakvot/screen/WelcomeScreen.kt	(date 1697751771366)
@@ -192,14 +192,18 @@
                     val gradient = Brush.verticalGradient(
                         colors = listOf(
                             Color.Transparent,
-                            Color.Black
+                            Color.White
+                           // androidx.compose.material3.MaterialTheme.colorScheme.background
                         ),
                         startY = size.height / 3,
                         endY = size.height
                     )
                     onDrawWithContent {
                         drawContent()
-                        drawRect(gradient, blendMode = BlendMode.Darken)
+                        drawRect(
+                            gradient,
+                            blendMode = BlendMode
+                        )
                     }
                 }
         )
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"deploymentTargetDropDown\">\n    <value>\n      <entry key=\"SplashScreenPrev\">\n        <State />\n      </entry>\n      <entry key=\"app\">\n        <State>\n          <targetSelectedWithDropDown>\n            <Target>\n              <type value=\"QUICK_BOOT_TARGET\" />\n              <deviceKey>\n                <Key>\n                  <type value=\"VIRTUAL_DEVICE_PATH\" />\n                  <value value=\"C:\\Users\\maphi\\.android\\avd\\Pixel_3a_API_33_x86_64.avd\" />\n                </Key>\n              </deviceKey>\n            </Target>\n          </targetSelectedWithDropDown>\n          <timeTargetWasSelectedWithDropDown value=\"2023-10-19T07:15:40.468193800Z\" />\n        </State>\n      </entry>\n    </value>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 529a97acc6f4e3a84ea77dcfbd02948cc56d1c0e)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1697749342472)
@@ -5,21 +5,8 @@
       <entry key="SplashScreenPrev">
         <State />
       </entry>
-      <entry key="app">
-        <State>
-          <targetSelectedWithDropDown>
-            <Target>
-              <type value="QUICK_BOOT_TARGET" />
-              <deviceKey>
-                <Key>
-                  <type value="VIRTUAL_DEVICE_PATH" />
-                  <value value="C:\Users\maphi\.android\avd\Pixel_3a_API_33_x86_64.avd" />
-                </Key>
-              </deviceKey>
-            </Target>
-          </targetSelectedWithDropDown>
-          <timeTargetWasSelectedWithDropDown value="2023-10-19T07:15:40.468193800Z" />
-        </State>
+      <entry key="Unnamed">
+        <State />
       </entry>
     </value>
   </component>
